pipeline {
    agent any
    
    options {
    timeout(time: 5, unit: 'MINUTES')
  }
    stages {
        stage("Code Analysis") {
            steps {
                sh '''
                S_TOKEN=$(docker exec -t sonarqube cat /data/.token)
                docker run --rm -e SONAR_HOST_URL="http://sonarqube:9000" -e \"SONAR_SCANNER_OPTS=-Dsonar.projectKey=PIN1 -Dsonar.projectBaseDir=/jenkins_home/jobs/PIN1/workspace/app/angular/src\" -e SONAR_TOKEN="${S_TOKEN}" --network ci_sonarnet -v ci_jenkins_home:/jenkins_home sonarsource/sonar-scanner-cli
                '''
            }
        }
        stage("Build App") {
            steps {
                sh '''
                docker run --rm -v ci_jenkins_home:/jenkins_home -w /jenkins_home/jobs/PIN1/workspace/app/angular/src -e NG_CLI_ANALYTICS=ci -t node:lts sh -c "npm install && npm run build"
                '''
            }
        }
        stage("Docker Lint") {
            steps {
                sh '''
                docker run --rm -t -v ci_jenkins_home:/jenkins_home -w /jenkins_home/jobs/PIN1/workspace/app/angular hadolint/hadolint /bin/hadolint Dockerfile
                '''
            }
        }
        stage("Image Build") {
            steps {
                sh '''
                docker image build -f app/angular/Dockerfile -t todomvc-app app/angular
                '''
            }
        }
        stage("Container Scanner") {
            steps {
                sh '''
                docker run -t -v /var/run/docker.sock:/var/run/docker.sock bitnami/trivy image todomvc-app:latest
                '''
            }
        }
        stage("Run Tests") {
            steps {
                sh '''
                docker run --rm -d -p 8084:80 --name todomvc-app todomvc-app:latest
                docker run --rm -v ci_jenkins_home:/jenkins_home -w /jenkins_home/jobs/PIN1/workspace/tests/e2e -t mcr.microsoft.com/playwright:v1.40.0-jammy sh -c "npm i && npx playwright install --with-deps && npx playwright test --trace on"
                docker rm -f todomvc-app
                '''
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './tests/e2e/playwright-report', reportFiles: 'index.html', reportName: 'E2E Tests', reportTitles: '', useWrapperFileDirectly: true])
            }
        }
        stage("Image Push") {
            steps {
                sh '''
                docker login -u admin -p admin123 127.0.0.1:8083
                docker tag todomvc-app:latest 127.0.0.1:8083/todomvc-app:latest
                docker push 127.0.0.1:8083/todomvc-app:latest
                '''
            }
        }
    }
}